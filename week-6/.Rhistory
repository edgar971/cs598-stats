plot(cars)
health_data= read.csv("mydata.csv")
health_data= read.csv("data/sepsis.csv")
### Randomly split the data into 75% for training and 25% for testing.
### Answer:
```{r}
health_data= read.csv("data/sepsis.csv")
library(MASS)
attach(Boston)
Boston
show(Boston)
poly()
x = Boston.dis
Boston['dis']
x = Boston['dis']
View(x)
y = Boston['knox']
y = Boston['nox']
poly(x)
poly(x, 1)
poly(x = x, 1)
model <- lm(y ~ poly(x,3))
model <- lm(y ~ poly(x,3, raw = TRUE))
View(x)
View(y)
View(x)
View(y)
model <- lm(x ~ poly(y,3, raw = TRUE))
poly(x = x, 1, raw =  True)
poly(x = x, 1, raw = True)
poly(x = x, 1, raw = raw=TRUE)
poly(x = x, 1, raw=TRUE)
fit<-lm(wage ~ bs(age,knots = c(25,40,60)),data = Wage )
fit<-lm(y ~ poly(x))
fit7=lm(medv~poly(lstat,4))
fit7=lm(medv~poly(lstat,4))
library(MASS)
attach(Boston)
fit7=lm(medv~poly(lstat,4))
plot(medv~lstat,Boston)
dis
plot(dis~nox,Boston)
fit7=lm(dis~poly(nox,4))
View(fit7)
fit7=lm(nox~poly(dis,4))
View(fit7)
fit7=lm(dis~poly(nox,4))
fit7=lm(nox~poly(dis,4))
model=lm(nox~poly(dis,4))
View(model)
summary(model)
deviance(model)
predict(model)
predict(model, 6)
c(6)
new_x c(6)
new_x  = c(6)
predict(model, new_x)
)newdata = data.frame(waiting=80)
newdata = data.frame(6)
View(newdata)
predict(model, newdata)
predict(model, newdata, interval="predict")
new <- data.frame(x = seq(6))
predict(model, new, interval="predict")
predict(model, newdata = new)
i = data.frame(6)
View(i)
predict(model, newdata = i)
predict(model, data.frame(nox=c(5,10,15)),interval="confidence"))
predict(model, data.frame(nox=c(5,10,15)),interval="confidence")
predict(model, data.frame(nox=c(6)),interval="confidence")
model=lm(nox~poly(dis,4), data = Boston)
model
deviance(model)
predict(model, data.frame(nox=c(5,10,15)),interval="confidence")
confint(model)
predict(model, data.frame(lstat=c(5, 10, 15)), interval="confidence")
predict(model, data.frame(nox=c(6)), interval="confidence")
predict(model, data.frame(dis=c(6)), interval="confidence")
predict(model, data.frame(dis=c(6)), interval="confidence")
summary(model)
model=lm(nox~poly(dis,3), data = Boston)
predict(model, data.frame(dis=c(6)), interval="confidence")
confint(model)
deviance(model)
predict(model, data.frame(dis=c(6)), interval="confidence")
summary(model)
model=lm(nox~poly(dis,4), data = Boston)
deviance(model)
predict(model, data.frame(dis=c(6)), interval="confidence")
model=lm(nox~poly(dis,4))
model2=lm(nox~poly(dis,4))
summary(model2)
predict(model, data.frame(dis=c(6)))
predict(model2, data.frame(dis=c(6)))
myfit1 = lm(nox ~ bs(dis, df=3), data=Boston)
library(MASS)
myfit1 = lm(nox ~ bs(dis, df=3), data=Boston)
library(MASS)
load(ElemStatLearn)
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
zip.train
show(zip.train)
images = zip.train
View(images)
View(images)
write.csv(zip.train, 'zip.train.csv')
